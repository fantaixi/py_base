算法复杂度主要有两个方面：
1、时间复杂度：可以理解为算法的运行时间，如果算法运行时间太长，那这个算法就没法用。
时间复杂度的分析，一般有两种方法：事后统计法和事前分析法。
2、空间复杂度：可以理解为把算法存储在计算机中需要多大的空间，如果需要空间太大，那这个算法也没法用

在进行算法的时间复杂度分析时，我们只需要记住它的一条原则：只要高阶项,不要低阶项,也不要高阶项的系数。
这是因为，当执行次数n变得无穷大时，整个变化趋势基本上是由高阶项所决定的，低阶项对它的影响微乎其微

计算时间复杂度的步骤主要包括：
1、找出算法中的基本语句：即算法中执行次数最多的那条语句，通常是最内层循环的循环体。
2、计算基本语句的执行次数的数量级。
3、用大O记号表示算法的时间性能

空间复杂度是对一个算法在运行过程中临时占用存储空间大小的一个量度。空间复杂度并不是程序占用的字节大小，而是变量的个数。
计算空间复杂度的步骤主要包括：
1、找出算法中的基本存储单元：即算法中使用的变量和数据结构。
2、计算基本存储单元的数量级。
3、用大O记号表示算法的空间性能